/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define RAISE   1
#define LOWER   2


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L   |  U  |  Y  |  ;  |  -   |
// | ESC  |  A  |  R  |  S  |  T  |  D  |   |  H  |  N   |  E  |  I  |  O  |  '   |
// | LGUI |  Z  |  X  |  C  |  V  |  B  |   |  K  |  M   |  ,  |  .  |  /  | ESC  |
//              | COPY|PASTE|                            |  +  |  =  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | BKSP|
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

                        bindings = <
   &kp TAB  &kp Q &kp W &kp F &kp P &kp G          &kp J &kp L  &kp U     &kp Y   &kp SEMI &kp MINUS
   &kp ESC  &kp A &kp R &kp S &kp T &kp D          &kp H &kp N  &kp E     &kp I   &kp O    &kp SQT
   &kp LGUI &kp Z &kp X &kp C &kp V &kp B          &kp K &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
            &kp K_COPY &kp K_PASTE                              &kp KP_PLUS &kp EQUAL
                      &kp LSHFT &mo LOWER          &mo RAISE &kp BKSP
                      &kp LCTRL &kp SPACE          &kp RET   &kp BTN2
                      &kp LCTRL &kp LALT           &kp BTN1  &kp BTN3
                        >;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };


                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |

                        bindings = <
   &trans    &kp EXCL   &kp AT   &kp HASH &kp DLLR  &kp PRCNT            &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR &kp RPAR        &kp TILD
   &kp ESC   &kp N1     &kp N2   &kp N3   &kp N4    &kp N5               &kp N6    &kp N7   &kp N8          &kp N9   &kp N0          &kp GRAVE
   &kp LSHFT &kp EQUAL &kp PLUS &trans   &kp LCBR  &kp RCBR             &kp LBRC  &kp RBRC &trans          &trans   &kp NON_US_BSLH &kp NON_US_HASH
                                                  &trans &trans &trans &trans
                                                  &trans &trans &trans &trans
                                                  &trans &trans &trans &trans
                                                  &trans &trans &trans &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                                  bindings = <
     &bt BT_CLR &bt BT_SEL 0    &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3      &bt BT_SEL 4           &trans      &trans    &trans    &trans    &trans    &trans
     &kp ESC    &kp C_VOLUME_DN &kp K_MUTE   &kp K_MUTE   &kp C_VOLUME_UP   &trans                 &trans      &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans
     &trans     &kp C_BRI_DN    &trans       &trans       &kp C_BRI_UP      &trans                 &kp K_CMENU &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans
                                                  &trans &trans &trans &trans
                                                  &trans &trans &trans &trans
                                                  &trans &trans &trans &trans
                                                  &trans &trans &trans &trans
                        >;
                };
        };
};
